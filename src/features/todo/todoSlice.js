import {createSlice, nanoid} from '@reduxjs/toolkit';

const initialState = {
    // for the initial state 
    todos: [{id:1,  text: "Hello world"}]
}

export const todoSlice = createSlice({

// name property is important inbuild in redux tool kit
    name: 'todo',

    //every slice has intial state
    initialState,
    reducers: {

        // state depicts the current state
        // and action is the action that is being performed
        addTodo: (state, action) => {

            const todo = {
                
                id: nanoid(),  
                text: action.payload // payload is an object that contains the text
            }

            state.todos.push(todo) // to update the todo or state [todo push into todos by this Method ]
        },
        removeTodo: (state, action) => {

            state.todos = state.todos.filter((todo) => todo.id !== action.payload)
            // this code says that go through state.todos it should not match with action.payload if it matches then filter it out
            // state.todos access todos object and filter Method 
            // can access each and every value which farther access todo.id rondom id generated by nanoid !== not equal action.payload which coming next action
        }, 

        updateTodo: (state, action) => {
            state.todos = state.todos.map((todo) =>
                todo.id === action.payload.id
                    ? { ...todo, ...action.payload.data } // Update this todo
                    : todo // Keep this todo the same
            );
        }
        
    }
})

export const {addTodo, removeTodo, updateTodo} = todoSlice.actions;

export default todoSlice.reducer